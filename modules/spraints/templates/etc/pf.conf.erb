int_if  = <%= @int_if %>
hbb_if  = <%= @hbb_if %>
int_net = $int_if:network

hbb_route = "(" $hbb_if " <hbb_gw>)"

ext_ifs = "{" $hbb_if "}"

turbo_ports = "{ ssh, domain }"

set block-policy drop
set skip on lo0
set state-defaults pflow

# This table will be manipulated at runtime
table <turbo_hosts> counters

# This table will also be manipulated at runtime, but maybe not as much.
# stuff like dominion, screenhero, bluejeans?
table <turbo_sites> counters

# This table will also be manipulated at runtime, but maybe not as much.
# stuff like app store downloads.
table <slow_sites> counters

# This is the experimental "use hoosier broadband" list
# I'm going to manually mess with this
table <hbb_hosts> counters

# This is the table that should hold exactly one address, the current HBB gateway
table <hbb_gw>

table <hbb_net> const { $hbb_if:network }

match in all scrub (no-df random-id max-mss 1440)

# NAT
match out on $hbb_if from $int_net to any nat-to ($hbb_if)

# By default don't let any traffic from outside come in.
block in log on $ext_ifs
# Let me ssh from the external networks. This might be useful some day,
# like if I need to connect to the AT&T access point or something.
pass in on $ext_ifs proto tcp from any to any port ssh

# Everything outgoing is OK.
pass out log inet
pass out log on $hbb_if proto tcp modulate state
pass out log on $hbb_if proto udp     keep state

# Default all traffic to hbb
pass in on $int_if all route-to $hbb_route

# Pin some traffic to particular interfaces
pass in on $int_if from any to <hbb_net> route-to $hbb_route

pass in on $int_if from any to $int_if

<% if @collectd_master -%>
  <% if @hbb_test_routes.respond_to?(:each) -%>
    <% @hbb_test_routes.each do |ip| -%>
pass in on $int_if from <%= @collectd_master %> to <%= ip %> route-to $hbb_route
    <% end -%>
  <% end -%>
<% end -%>
